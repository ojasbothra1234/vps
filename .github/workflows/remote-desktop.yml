# .github/workflows/kali-vm.yml

name: Create Kali Linux Remote VM with Tailscale

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Kali Linux Environment
    runs-on: ubuntu-latest
    steps:
      - name: 1. Start Kali Linux Container with Network Permissions
        run: |
          echo "### Starting Kali container with necessary network capabilities... ###"
          docker run --name kali -d \
            --cap-add=NET_ADMIN \
            --device=/dev/net/tun \
            -p 3389:3389 \
            kalilinux/kali-rolling tail -f /dev/null
          sleep 15

      - name: 2. Install Dependencies (XRDP, Desktop, and Curl)
        run: |
          echo "### Updating and installing dependencies... ###"
          docker exec kali bash -c "apt-get update && apt-get install -y kali-desktop-xfce xrdp curl"
          
      - name: 3. Configure User and Start XRDP
        run: |
          echo "### Setting root password to 'kali' and starting XRDP service... ###"
          docker exec kali bash -c 'echo "root:kali" | chpasswd'
          docker exec kali bash -c "service xrdp start"

      - name: 4. Install Tailscale
        run: |
          echo "### Installing Tailscale binaries inside the container... ###"
          docker exec kali bash -c "curl -fsSL https://tailscale.com/install.sh | sh"

      - name: 5. Start Tailscale Daemon
        run: |
          echo "### Manually starting Tailscale daemon in background... ###"
          docker exec -d kali tailscaled
          echo "Waiting 10 seconds for the daemon to initialize..."
          sleep 10

      - name: 6. Connect to Tailnet and Capture Logs
        run: |
          echo "### DEBUG: Attempting to connect to the tailnet and capturing all output... ###"
          # The 'set -x' command prints each sub-command before running it.
          # This will give us a detailed log of what 'tailscale up' is doing.
          docker exec kali bash -c 'set -x; \
            tailscale status; \
            tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=github-kali-vm'
          
      - name: 7. Keep Workflow Alive
        run: |
          echo "####################################################################"
          echo "##  SUCCESS! The Kali VM is running and connected to your Tailscale network."
          echo "####################################################################"
          sleep 21600 # 6 hours
