# .github/workflows/kali-vm.yml

name: Create Kali Linux Remote VM

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Kali Linux Environment
    runs-on: ubuntu-latest
    steps:
      - name: 1. Start Kali Linux Container
        run: |
          echo "### Starting Kali Linux Docker container in the background... ###"
          docker run -d --name kali -p 3389:3389 kalilinux/kali-rolling tail -f /dev/null
          # Giving the container a few seconds to boot up before we run commands inside it.
          sleep 15

      - name: 2. Install Desktop and XRDP
        run: |
          echo "### Updating and installing Kali desktop and XRDP... ###"
          docker exec kali bash -c "apt-get update && apt-get install -y kali-desktop-xfce xrdp"
          
      - name: 3. Configure User and Start XRDP
        run: |
          echo "### Setting root password to 'kali' and starting XRDP service... ###"
          docker exec kali bash -c 'echo "root:kali" | chpasswd'
          docker exec kali bash -c "service xrdp start"

      - name: 4. Download and Setup LocalXpose
        run: |
          echo "### Downloading LocalXpose client... ###"
          curl -sL https://api.localxpose.io/api/v2/downloads/loclx-linux-amd64.zip -o loclx.zip
          unzip loclx.zip
          # Make the client executable
          chmod +x loclx

      - name: 5. Verify LocalXpose Auth Token
        run: |
          echo "### Verifying your LocalXpose token... ###"
          ./loclx account status --authtoken ${{ secrets.LOCALTUNNEL_TOKEN }}
          # The command above will FAIL if your token is invalid.
          
      - name: 6. Run LocalXpose Tunnel
        run: |
          echo "### Starting tunnel. Look for the TCP URL below to connect. ###"
          ./loclx tunnel tcp --to 127.0.0.1:3389 --authtoken ${{ secrets.LOCALTUNNEL_TOKEN }}
