# .github/workflows/kali-vm.yml

name: Create Kali Linux Remote VM with Tailscale

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Kali Linux Environment
    runs-on: ubuntu-latest
    steps:
      - name: 1. Start Kali Linux Container with Network Permissions
        run: |
          echo "### Starting Kali container with necessary network capabilities... ###"
          # CRITICAL FIX: We add '--cap-add=NET_ADMIN' and '--device=/dev/net/tun'
          # This gives the container permission to manage network interfaces for Tailscale.
          docker run --name kali -d \
            --cap-add=NET_ADMIN \
            --device=/dev/net/tun \
            -p 3389:3389 \
            kalilinux/kali-rolling tail -f /dev/null
          sleep 15

      - name: 2. Install Dependencies (XRDP, Desktop, and Curl)
        run: |
          echo "### Updating and installing dependencies... ###"
          docker exec kali bash -c "apt-get update && apt-get install -y kali-desktop-xfce xrdp curl"
          
      - name: 3. Configure User and Start XRDP
        run: |
          echo "### Setting root password to 'kali' and starting XRDP service... ###"
          docker exec kali bash -c 'echo "root:kali" | chpasswd'
          docker exec kali bash -c "service xrdp start"

      - name: 4. Install and Connect Tailscale
        run: |
          echo "### Installing Tailscale... ###"
          docker exec kali bash -c "curl -fsSL https://tailscale.com/install.sh | sh"

          echo "### Manually starting Tailscale daemon... ###"
          docker exec -d kali tailscaled
          sleep 10 # Increased wait time to be safe

          echo "### Checking Tailscale status before connecting... ###"
          # This helps with debugging; it will show if the daemon is running.
          docker exec kali tailscale status || echo "Tailscale daemon not yet connected."

          echo "### Connecting to the tailnet... ###"
          docker exec kali bash -c "tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=github-kali-vm"
          
      - name: 5. Keep Workflow Alive
        run: |
          echo "####################################################################"
          echo "##  SUCCESS! The Kali VM is running and connected to your Tailscale network."
          echo "####################################################################"
          sleep 21600 # 6 hours
